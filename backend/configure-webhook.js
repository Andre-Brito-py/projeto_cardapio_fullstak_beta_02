import axios from 'axios';

// Configura√ß√µes
const BACKEND_URL = 'http://localhost:4000';
const TELEGRAM_BOT_TOKEN = '8337588749:AAGxcGgyw3qpKEgvzwEUYeW0PWexJrFuMGI';

// Para desenvolvimento local, voc√™ pode usar:
// 1. ngrok: https://ngrok.com/
// 2. localtunnel: https://localtunnel.github.io/www/
// 3. serveo: https://serveo.net/

// Exemplo de webhook URL (substitua pela sua URL p√∫blica)
const WEBHOOK_URL = 'https://your-ngrok-url.ngrok.io/api/telegram/webhook';

async function configureWebhook() {
    try {
        console.log('üîó Configurando webhook do Telegram...');
        console.log('\nüìã INSTRU√á√ïES PARA CONFIGURAR WEBHOOK:');
        console.log('=====================================');
        console.log('\n1. üì¶ Instale uma ferramenta de t√∫nel (escolha uma):');
        console.log('   ‚Ä¢ ngrok: https://ngrok.com/download');
        console.log('   ‚Ä¢ localtunnel: npm install -g localtunnel');
        console.log('   ‚Ä¢ serveo: ssh -R 80:localhost:4000 serveo.net');
        
        console.log('\n2. üöÄ Execute o t√∫nel para o backend (porta 4000):');
        console.log('   ‚Ä¢ ngrok: ngrok http 4000');
        console.log('   ‚Ä¢ localtunnel: lt --port 4000');
        console.log('   ‚Ä¢ serveo: ssh -R 80:localhost:4000 serveo.net');
        
        console.log('\n3. üìù Copie a URL p√∫blica gerada (ex: https://abc123.ngrok.io)');
        
        console.log('\n4. üîß Configure a webhook no Telegram:');
        console.log('   Acesse: https://api.telegram.org/bot' + TELEGRAM_BOT_TOKEN + '/setWebhook');
        console.log('   Par√¢metros:');
        console.log('   ‚Ä¢ url: SUA_URL_PUBLICA/api/telegram/webhook');
        console.log('   ‚Ä¢ allowed_updates: ["message", "callback_query"]');
        
        console.log('\n5. ‚úÖ Verifique a configura√ß√£o:');
        console.log('   https://api.telegram.org/bot' + TELEGRAM_BOT_TOKEN + '/getWebhookInfo');
        
        console.log('\nü§ñ TESTE DO BOT:');
        console.log('===============');
        console.log('1. Abra o Telegram e procure por: @' + await getBotUsername());
        console.log('2. Envie /start para o bot');
        console.log('3. Verifique se o bot responde');
        
        console.log('\nüì± CONFIGURA√á√ÉO NO PAINEL ADMIN:');
        console.log('=================================');
        console.log('1. Acesse: http://localhost:5174');
        console.log('2. Fa√ßa login como Super Admin');
        console.log('3. V√° em Configura√ß√µes > Telegram');
        console.log('4. Configure:');
        console.log('   ‚Ä¢ Token: ' + TELEGRAM_BOT_TOKEN);
        console.log('   ‚Ä¢ Webhook URL: SUA_URL_PUBLICA/api/telegram/webhook');
        console.log('   ‚Ä¢ Admin Chat ID: (obtenha enviando /start para o bot)');
        
        console.log('\nüéâ Configura√ß√£o conclu√≠da!');
        console.log('\n‚ö†Ô∏è  IMPORTANTE:');
        console.log('‚Ä¢ Mantenha o t√∫nel ativo durante o desenvolvimento');
        console.log('‚Ä¢ Para produ√ß√£o, use um dom√≠nio real com HTTPS');
        console.log('‚Ä¢ Configure o Chat ID do admin para receber notifica√ß√µes');
        
    } catch (error) {
        console.error('‚ùå Erro:', error.message);
    }
}

async function getBotUsername() {
    try {
        const response = await axios.get(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe`);
        if (response.data.ok) {
            return response.data.result.username;
        }
    } catch (error) {
        return 'SEU_BOT_USERNAME';
    }
    return 'SEU_BOT_USERNAME';
}

// Executar configura√ß√£o
configureWebhook();